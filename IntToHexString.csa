//plug in a integer(or float) and it will return its hex representation
//formatted - XX XX XX XX
:inttohexstring
Function 1 1 3

pushstring ""
pstatic2 262//you can use any variable to hold this
strcopy 64
ipush_0
setf 3
:Loop
getf 3
push1 8
jumpge @loopend
getf 0
push1 28
getf 3
mult1 4
sub
CallNative shift_right 2 1
push1 15
And
Call @inttohexchar
pstatic2 262
StrAdd 64
getf 3
ipush_2
mod
ipush_1
jumpne @loopcontinue
pushstring " "
pstatic2 262
stradd 64

:loopcontinue
getf 3
ipush_1
add
setf 3
jump @Loop

:loopend
pstatic2 262
Return 1 1

:inttohexchar
Function 1 1 2
getf 0
switch [0 @char0]:[1 @char1]:[2 @char2]:[3 @char3]:[4 @char4]:[5 @char5]:[6 @char6]:[7 @char7]:[8 @char8]:[9 @char9]:[10 @chara]:[11 @charb]:[12 @charc]:[13 @chard]:[14 @chare]:[15 @charf]
Jump @charerror

:char0
pushstring "0"
Return 1 1

:char1
pushstring "1"
Return 1 1

:char2
pushstring "2"
Return 1 1

:char3
pushstring "3"
Return 1 1

:char4
pushstring "4"
Return 1 1

:char5
pushstring "5"
Return 1 1

:char6
pushstring "6"
Return 1 1

:char7
pushstring "7"
Return 1 1

:char8
pushstring "8"
Return 1 1

:char9
pushstring "9"
Return 1 1

:chara
pushstring "A"
Return 1 1

:charb
pushstring "B"
Return 1 1

:charc
pushstring "C"
Return 1 1

:chard
pushstring "D"
Return 1 1

:chare
pushstring "E"
Return 1 1

:charf
pushstring "F"
Return 1 1

:charerror
pushstring ""
Return 1 1